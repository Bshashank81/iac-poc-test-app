{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "originalUriBaseIds": {
        "PROJECTROOT": {
          "uri": "file:///home/sheshib/Documents/devSecOps/demos/IaC-Poc/",
          "description": {
            "text": "The root directory for all project files."
          }
        }
      },
      "tool": {
        "driver": {
          "name": "Snyk IaC",
          "fullName": "Snyk Infrastructure as Code",
          "version": "1.1237.0",
          "informationUri": "https://docs.snyk.io/products/snyk-infrastructure-as-code",
          "rules": [
            {
              "id": "SNYK-CC-K8S-47",
              "name": "RoleWithDangerousPermissions",
              "shortDescription": {
                "text": "Medium severity - Role with dangerous permissions"
              },
              "fullDescription": {
                "text": "Medium severity - Role"
              },
              "help": {
                "text": "The issue is... \nA role was found using a dangerous permissions\n\n The impact of this is... \n Using this role grants dangerous permissions\n\n You can resolve this by... \nConsider removing this permissions",
                "markdown": "**The issue is...** \nA role was found using a dangerous permissions\n\n **The impact of this is...** \n Using this role grants dangerous permissions\n\n **You can resolve this by...** \nConsider removing this permissions"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "Role"
                ],
                "problem": {
                  "severity": "medium"
                }
              },
              "helpUri": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-47"
            },
            {
              "id": "SNYK-CC-K8S-15",
              "name": "ServiceDoesNotRestrictIngressSources",
              "shortDescription": {
                "text": "Medium severity - Service does not restrict ingress sources"
              },
              "fullDescription": {
                "text": "Medium severity - Service"
              },
              "help": {
                "text": "The issue is... \nDefining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.\n\n The impact of this is... \n This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.\n\n You can resolve this by... \nSet `loadBalancerSourceRanges` attribute value to specific IP addresses",
                "markdown": "**The issue is...** \nDefining a Load balancer Service without setting the loadBalancerSourceRanges property will use the default value of 0.0.0.0/0.\n\n **The impact of this is...** \n This allows access to any traffic to the Node Security Group(s), potentially meaning everyone can access your service.\n\n **You can resolve this by...** \nSet `loadBalancerSourceRanges` attribute value to specific IP addresses"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "Service"
                ],
                "problem": {
                  "severity": "medium"
                }
              },
              "helpUri": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-15"
            },
            {
              "id": "SNYK-CC-K8S-4",
              "name": "ContainerIsRunningWithoutMemoryLimit",
              "shortDescription": {
                "text": "Low severity - Container is running without memory limit"
              },
              "fullDescription": {
                "text": "Low severity - Deployment"
              },
              "help": {
                "text": "The issue is... \nMemory limit is not defined\n\n The impact of this is... \n Containers without memory limits are more likely to be terminated when the node runs out of memory\n\n You can resolve this by... \nSet `resources.limits.memory` value",
                "markdown": "**The issue is...** \nMemory limit is not defined\n\n **The impact of this is...** \n Containers without memory limits are more likely to be terminated when the node runs out of memory\n\n **You can resolve this by...** \nSet `resources.limits.memory` value"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "Deployment"
                ],
                "problem": {
                  "severity": "low"
                }
              },
              "helpUri": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-4"
            },
            {
              "id": "SNYK-CC-K8S-42",
              "name": "ContainerCouldBeRunningWithOutdatedImage",
              "shortDescription": {
                "text": "Low severity - Container could be running with outdated image"
              },
              "fullDescription": {
                "text": "Low severity - Deployment"
              },
              "help": {
                "text": "The issue is... \nThe image policy does not prevent image reuse\n\n The impact of this is... \n The container may run with outdated or unauthorized image\n\n You can resolve this by... \nSet `imagePullPolicy` attribute to `Always`",
                "markdown": "**The issue is...** \nThe image policy does not prevent image reuse\n\n **The impact of this is...** \n The container may run with outdated or unauthorized image\n\n **You can resolve this by...** \nSet `imagePullPolicy` attribute to `Always`"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "Deployment"
                ],
                "problem": {
                  "severity": "low"
                }
              },
              "helpUri": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-42"
            },
            {
              "id": "SNYK-CC-K8S-36",
              "name": "ContainerIsRunningWithMultipleOpenPorts",
              "shortDescription": {
                "text": "Low severity - Container is running with multiple open ports"
              },
              "fullDescription": {
                "text": "Low severity - Deployment"
              },
              "help": {
                "text": "The issue is... \nContainer is declaring more than 2 listening ports\n\n The impact of this is... \n Increases the attack surface of the application and the container.\n\n You can resolve this by... \nReduce `ports` count to 2",
                "markdown": "**The issue is...** \nContainer is declaring more than 2 listening ports\n\n **The impact of this is...** \n Increases the attack surface of the application and the container.\n\n **You can resolve this by...** \nReduce `ports` count to 2"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "Deployment"
                ],
                "problem": {
                  "severity": "low"
                }
              },
              "helpUri": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-36"
            },
            {
              "id": "SNYK-CC-K8S-9",
              "name": "ContainerIsRunningWithoutPrivilegeEscalationControl",
              "shortDescription": {
                "text": "Medium severity - Container is running without privilege escalation control"
              },
              "fullDescription": {
                "text": "Medium severity - Pod"
              },
              "help": {
                "text": "The issue is... \n`allowPrivilegeEscalation` attribute is not set to `false`\n\n The impact of this is... \n Processes could elevate current privileges via known vectors, for example SUID binaries\n\n You can resolve this by... \nSet `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`",
                "markdown": "**The issue is...** \n`allowPrivilegeEscalation` attribute is not set to `false`\n\n **The impact of this is...** \n Processes could elevate current privileges via known vectors, for example SUID binaries\n\n **You can resolve this by...** \nSet `spec.{containers, initContainers}.securityContext.allowPrivilegeEscalation` to `false`"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "Pod"
                ],
                "problem": {
                  "severity": "medium"
                }
              },
              "helpUri": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-9"
            },
            {
              "id": "SNYK-CC-K8S-11",
              "name": "ContainersOrPodsUidCouldClashWithHostsUid",
              "shortDescription": {
                "text": "Low severity - Container's or Pod's  UID could clash with host's UID"
              },
              "fullDescription": {
                "text": "Low severity - Deployment"
              },
              "help": {
                "text": "The issue is... \n`runAsUser` value is set to low UID\n\n The impact of this is... \n UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass\n\n You can resolve this by... \nSet `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence",
                "markdown": "**The issue is...** \n`runAsUser` value is set to low UID\n\n **The impact of this is...** \n UID of the container processes could clash with host's UIDs and lead to unintentional authorization bypass\n\n **You can resolve this by...** \nSet `securityContext.runAsUser` value to greater or equal than 10'000. SecurityContext can be set on both `pod` and `container` level. If both are set, then the container level takes precedence"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "Deployment"
                ],
                "problem": {
                  "severity": "low"
                }
              },
              "helpUri": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-11"
            },
            {
              "id": "SNYK-CC-K8S-5",
              "name": "ContainerHasNoCpuLimit",
              "shortDescription": {
                "text": "Low severity - Container has no CPU limit"
              },
              "fullDescription": {
                "text": "Low severity - Deployment"
              },
              "help": {
                "text": "The issue is... \nContainer has no CPU limit\n\n The impact of this is... \n CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.\n\n You can resolve this by... \nAdd `resources.limits.cpu` field with required CPU limit value",
                "markdown": "**The issue is...** \nContainer has no CPU limit\n\n **The impact of this is...** \n CPU limits can prevent containers from consuming valuable compute time for no benefit (e.g. inefficient code) that might lead to unnecessary costs. It is advisable to also configure CPU requests to ensure application stability.\n\n **You can resolve this by...** \nAdd `resources.limits.cpu` field with required CPU limit value"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "Deployment"
                ],
                "problem": {
                  "severity": "low"
                }
              },
              "helpUri": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-5"
            },
            {
              "id": "SNYK-CC-K8S-8",
              "name": "ContainerIsRunningWithWritableRootFilesystem",
              "shortDescription": {
                "text": "Low severity - Container is running with writable root filesystem"
              },
              "fullDescription": {
                "text": "Low severity - Pod"
              },
              "help": {
                "text": "The issue is... \n`readOnlyRootFilesystem` attribute is not set to `true`\n\n The impact of this is... \n Compromised process could abuse writable root filesystem to elevate privileges\n\n You can resolve this by... \nSet `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`",
                "markdown": "**The issue is...** \n`readOnlyRootFilesystem` attribute is not set to `true`\n\n **The impact of this is...** \n Compromised process could abuse writable root filesystem to elevate privileges\n\n **You can resolve this by...** \nSet `spec.{containers, initContainers}.securityContext.readOnlyRootFilesystem` to `true`"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "Pod"
                ],
                "problem": {
                  "severity": "low"
                }
              },
              "helpUri": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-8"
            },
            {
              "id": "SNYK-CC-K8S-6",
              "name": "ContainerDoesNotDropAllDefaultCapabilities",
              "shortDescription": {
                "text": "Medium severity - Container does not drop all default capabilities"
              },
              "fullDescription": {
                "text": "Medium severity - Deployment"
              },
              "help": {
                "text": "The issue is... \nAll default capabilities are not explicitly dropped\n\n The impact of this is... \n Containers are running with potentially unnecessary privileges\n\n You can resolve this by... \nAdd `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`",
                "markdown": "**The issue is...** \nAll default capabilities are not explicitly dropped\n\n **The impact of this is...** \n Containers are running with potentially unnecessary privileges\n\n **You can resolve this by...** \nAdd `ALL` to `securityContext.capabilities.drop` list, and add only required capabilities in `securityContext.capabilities.add`"
              },
              "defaultConfiguration": {
                "level": "warning"
              },
              "properties": {
                "tags": [
                  "security",
                  "Deployment"
                ],
                "problem": {
                  "severity": "medium"
                }
              },
              "helpUri": "https://security.snyk.io/rules/cloud/SNYK-CC-K8S-6"
            }
          ]
        }
      },
      "automationDetails": {
        "id": "snyk-iac"
      },
      "results": [
        {
          "ruleId": "SNYK-CC-K8S-47",
          "message": {
            "text": "This line contains a potential medium severity misconfiguration affecting the Role"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 55
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-47",
          "message": {
            "text": "This line contains a potential medium severity misconfiguration affecting the Role"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 139
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-47",
          "message": {
            "text": "This line contains a potential high severity misconfiguration affecting the ClusterRole"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 157
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-15",
          "message": {
            "text": "This line contains a potential medium severity misconfiguration affecting the Service"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 359
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-4",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 499
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-42",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 459
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-36",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 477
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-9",
          "message": {
            "text": "This line contains a potential medium severity misconfiguration affecting the Pod"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 504
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-11",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 510
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-5",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 499
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-8",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Pod"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 503
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-8",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Pod"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 561
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-6",
          "message": {
            "text": "This line contains a potential medium severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 561
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-11",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 561
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-5",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 548
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-4",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 548
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-11",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 610
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-4",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 595
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-8",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Pod"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 610
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-6",
          "message": {
            "text": "This line contains a potential medium severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 610
                }
              }
            }
          ]
        },
        {
          "ruleId": "SNYK-CC-K8S-5",
          "message": {
            "text": "This line contains a potential low severity misconfiguration affecting the Deployment"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "eks/ingress-nginx-controller.yml",
                  "uriBaseId": "PROJECTROOT"
                },
                "region": {
                  "startLine": 595
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
